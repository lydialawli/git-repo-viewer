{"version":3,"sources":["components/Styles.js","queries.js","components/HeaderBar.js","components/Search.js","components/Tab.js","components/Tabs.js","components/Comment.js","components/Card.js","components/Section.js","components/Content.js","components/Login.js","App.js","serviceWorker.js","index.js"],"names":["LoginWrapper","styled","width","height","display","justifyContent","alignItems","background","Header","backgroundColor","boxShadow","ContentWrapper","flexDirection","Avatar","src","margin","borderRadius","overflow","marginLeft","marginRight","GreyText","loadingText","color","fontSize","paddingLeft","fontWeight","fontFamily","Center","LogoutText","cursor","ButtonSubmit","button","InputContainer","minWidth","border","padding","textDecoration","ErrorMsg","SearchWrapper","TabWrapper","flex","TabList","borderBottom","TopContent","paddingTop","CommentContainer","marginTop","CommentBody","CardWrapper","minHeight","Tag","IconWrapper","noPadding","paddingRight","GET_VIEWER","gql","PULL_REQUESTS_QUERY","OPEN_ISSUES_QUERY","CLOSED_ISSUES_QUERY","HeaderBar","onLogout","res","useQuery","loading","error","data","newData","viewer","useViewerQuery","onClick","avatarUrl","alt","login","Search","onSubmitSearch","useState","name","setName","repoName","setRepoName","onChange","e","target","value","type","placeholder","style","Tab","activeTab","label","className","Tabs","children","props","setActiveTab","onClickTabItem","tab","map","child","key","Comment","comment","node","author","moment","createdAt","format","body","Card","isPressed","cardPressed","comments","edges","filteredComments","setFilteredComments","title","id","totalCount","number","closedAt","url","window","open","text","filtered","filter","toUpperCase","includes","filterSearch","c","Section","pressedCard","setPressedCard","queryType","repo","repository","query","variables","refetch","useRepoDataQuery","message","Content","userInput","setUserInput","x","r","i","Login","onSubmit","token","setToken","css","defaultProps","errorMsg","accessToken","localStorage","getItem","httpLink","HttpLink","uri","headers","Authorization","client","ApolloClient","link","cache","InMemoryCache","App","setRepo","onChangeName","n","onChangeRepo","console","log","clear","location","reload","event","preventDefault","setItem","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.7407b4ea.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const LoginWrapper = styled('div')({\n  width: '100%',\n  height: '100%',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  background: '#F3F0ED'\n})\n\nexport const Header = styled('header')({\n  width: '100%',\n  height: 60,\n  backgroundColor: 'rgb(210, 54, 105)',\n  display: 'flex',\n  justifyContent: 'flex-end',\n  alignItems: 'center',\n  boxShadow: ' 2px 1px 10px 3px rgb(231, 231, 231)'\n})\n\nexport const ContentWrapper = styled('div')({\n  width: '100%',\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  alignItems: 'center',\n  background: 'white',\n})\n\nexport const Avatar = styled('img')(({ height, width, src, margin }) => ({\n  borderRadius: '50%',\n  width: width || 48,\n  height: height || 48,\n  backgroundColor: '#ccc',\n  overflow: 'hidden',\n  marginLeft: margin || 20,\n  marginRight: margin || 20,\n  src,\n}))\n\nexport const GreyText = styled('span')(({ loadingText }) => ({\n  color: loadingText ? 'rgb(154,154,154)' : 'rgb(163,168,174)',\n  fontSize: loadingText ? 20 : 13,\n  paddingLeft: 3,\n  fontWeight: 200,\n  fontFamily: 'Rubik'\n}))\n\nexport const Center = styled('div')({\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center'\n})\n\nexport const LogoutText = styled('h4')({\n  color: 'dark-grey',\n  cursor: 'pointer'\n})\n\n\nexport const ButtonSubmit = styled.button`\n  background: transparent;\n  color: palevioletred;\n  font-size: 1em;\n  margin: 1em;\n  padding: 0.25em 1em;\n  border: 2px solid palevioletred;\n  border-radius: 3px;\n  &:hover {\n    background-color: palevioletred;\n    color: white;\n    cursor: pointer;\n    text-decoration: none;\n  }\n`\n\nexport const InputContainer = styled('input')({\n  minWidth: '50px',\n  height: '15px',\n  borderRadius: 4,\n  fontSize: 13,\n  border: '2px solid #ccc',\n  fontWeight: 200,\n  fontFamily: 'Rubik',\n  padding: '8px 20px',\n  textDecoration: 'none',\n  background: 'transparent'\n})\n\nexport const ErrorMsg = styled('span')({\n  color: 'red',\n})\n\n\nexport const SearchWrapper = styled('div')({\n  width: '600px',\n  height: 80,\n  display: 'flex',\n  justifyContent: 'flex-end',\n  alignItems: 'center',\n})\n\nexport const TabWrapper = styled('div')({\n  width: '100%',\n  display: 'flex',\n  flex: 1,\n  flexDirection: 'column',\n})\n\nexport const TabList = styled('ol')({\n  // width: '100%',\n  borderBottom: '1px solid #ccc',\n  paddingLeft: 30,\n})\n\nexport const TopContent = styled('div')(({ justifyContent }) => ({\n  display: 'flex',\n  width: '100%',\n  justifyContent: justifyContent || 'space-between',\n  flexDirection: 'row',\n  paddingTop: 10,\n  fontWeight: 500,\n}))\n\nexport const CommentContainer = styled('div')({\n  display: 'flex',\n  boxShadow: ' 2px 1px 10px 0.5px rgb(231, 231, 231)',\n  borderRadius: 5,\n  padding: 10,\n  fontSize: 13,\n  fontFamily: 'Rubik',\n  marginTop: 10,\n  flexDirection: 'column',\n  background: 'white'\n})\n\nexport const CommentBody = styled('p')({\n  fontSize: 13,\n  paddingLeft: 40\n})\n\nexport const CardWrapper = styled('div')({\n  width: '90%',\n  minHeight: '70px',\n  margin: '30px 5px 30px 30px',\n  border: '3px solid palevioletred',\n  padding: '3px 15px 10px',\n  borderRadius: 4,\n})\n\nexport const Tag = styled('span')({\n  display: 'inline-block',\n  margin: '4px 4px 4px 0',\n  backgroundColor: '#eee',\n  borderRadius: 3,\n  padding: '2px 6px 3px',\n  color: '#666',\n  fontSize: 13,\n})\n\nexport const IconWrapper = styled('i')(({ noPadding }) => ({\n  display: 'flex',\n  paddingTop: noPadding ? 0 : 15,\n  paddingRight: 4,\n  justifyContent: 'center',\n  color: 'rgb(163,168,174)',\n  cursor: 'pointer',\n}))\n","import { gql } from 'apollo-boost'\nimport { useQuery } from 'react-apollo'\n\nconst GET_VIEWER = gql`\n\tquery {\n\t\tviewer {\n\t\t\tavatarUrl\n\t\t\tlogin\n\t\t\tid\n\t\t}\n\t}\n`\n\nconst PULL_REQUESTS_QUERY = gql`\n  query ($name: String!, $repo: String!) {\n    repository(owner: $name, name: $repo) {\n      pullRequests(last: 30) {\n        edges {\n          node {\n            id\n            title\n            number\n            url\n            comments(first: 20) {\n              totalCount\n              edges {\n                node {\n                  id\n                  author {\n                    login\n                    avatarUrl\n                  }\n                  body\n                  createdAt\n                }\n              }\n            }\n            author {\n              login\n            }\n            createdAt\n            closedAt\n            merged\n          }\n        }\n      }\n    }\n  }\n`\n\nconst OPEN_ISSUES_QUERY = gql`\n  query ($name: String!, $repo: String!) {\n    repository(owner: $name, name: $repo) {\n      issues(last: 30, states: OPEN) {\n        edges {\n          node {\n            title\n            id\n            url\n            number\n            createdAt\n            closedAt\n            author {\n              login\n            }\n            comments(first: 20) {\n              totalCount\n              edges {\n                node {\n                  id\n                  author {\n                    login\n                    avatarUrl\n                  }\n                  body\n                  createdAt\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nconst CLOSED_ISSUES_QUERY = gql`\n  query ($name: String!, $repo: String!) {\n    repository(owner: $name, name: $repo) {\n      issues(last: 30, states: CLOSED) {\n        edges {\n          node {\n            title\n            id\n            url\n            number\n            createdAt\n            closedAt\n            author {\n              login\n            }\n            comments(first: 20) {\n              totalCount\n              edges {\n                node {\n                  id\n                  author {\n                    login\n                    avatarUrl\n                  }\n                  body\n                  createdAt\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const useViewerQuery = () => {\n  const {\n    loading, error, data,\n  } = useQuery(GET_VIEWER)\n\n  const newData = (data && data.viewer) || {}\n\n  const res = {\n    ...newData,\n    loading,\n    error,\n  }\n  return { res }\n}\n\nexport const useRepoDataQuery = (name, repository, type) => {\n\n  const queryType = () => {\n    let query = ''\n    switch (type) {\n      case 'pullRequests':\n        query = PULL_REQUESTS_QUERY\n        break\n      case 'open-issues':\n        query = OPEN_ISSUES_QUERY\n        break\n      case 'closed-issues':\n        query = CLOSED_ISSUES_QUERY\n        break\n      default:\n    }\n    return query\n  }\n\n  const {\n    loading, error, data, refetch,\n  } = useQuery(queryType(), {\n    variables: {\n      name: name,\n      repo: repository\n    },\n  })\n\n  const newData = (data && data.repository) || {}\n\n  const repo = {\n    ...newData,\n    loading,\n    error,\n    refetch,\n  }\n\n  return { repo }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Header, Avatar, LogoutText } from './Styles'\nimport { useViewerQuery } from './../queries'\n\nconst HeaderBar = ({ onLogout }) => {\n  const { res } = useViewerQuery()\n\n  return (\n    <Header>\n      <LogoutText onClick={onLogout}>Logout</LogoutText>\n      {\n        (res.loading || res.error) &&\n        <Avatar src={'https://www.iconninja.com/files/980/515/831/warrior-ninja-avatar-samurai-icon.svg'} />\n      }\n      {\n        res && res.avatarUrl &&\n        <Avatar src={res.avatarUrl} alt={res.login} />\n      }\n    </Header>\n  )\n}\n\nHeaderBar.propTypes = {\n  onLogout: PropTypes.func.isRequired,\n}\n\n\nexport default HeaderBar\n","import React, { useState } from 'react'\nimport { InputContainer, ButtonSubmit, SearchWrapper } from './Styles'\n\n\nconst Search = ({ onSubmitSearch }) => {\n  const [name, setName] = useState('')\n  const [repoName, setRepoName] = useState('')\n\n  const handleSubmit = () => {\n    onSubmitSearch({ name: name, repoName: repoName })\n  }\n\n  return (\n    <SearchWrapper >\n      <InputContainer\n        onChange={e => { setName(e.target.value) }}\n        type='text'\n        placeholder={'name...'}\n      />\n      <h2 style={{ marginLeft: 10, marginRight: 10 }}>/</h2>\n      <InputContainer\n        onChange={e => { setRepoName(e.target.value) }}\n        type='text'\n        placeholder={'repo...'}\n      />\n      <ButtonSubmit onClick={handleSubmit}>SEARCH</ButtonSubmit>\n    </SearchWrapper>\n  )\n}\n\nexport default Search\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\n\nconst Tab = ({ activeTab, label, onClick }) => {\n\n  let className = 'tab-list-item'\n\n  if (activeTab === label) {\n    className += ' tab-list-active'\n  }\n\n  return (\n    <li\n      className={className}\n      onClick={() => onClick(label)}\n    >\n      {label}\n    </li>\n  )\n}\n\nTab.propTypes = {\n  label: PropTypes.string.isRequired,\n  activeTab: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n}\n\nexport default Tab\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport Tab from './Tab'\nimport { TabWrapper, TabList } from './Styles'\n\nconst Tabs = ({ children }) => {\n  const [activeTab, setActiveTab] = useState(children[0].props.label)\n\n  const onClickTabItem = (tab) => {\n    setActiveTab(tab)\n  }\n\n  return (\n    <TabWrapper>\n      <TabList>\n        {children.map((child) => {\n          const { label } = child.props\n\n          return (\n            <Tab\n              activeTab={activeTab}\n              key={label}\n              label={label}\n              onClick={onClickTabItem}\n            />\n          )\n        })}\n      </TabList>\n      <div className=\"tab-content\">\n        {children.map((child) => {\n          if (child.props.label !== activeTab) return undefined\n          return child.props.children\n        })}\n      </div>\n    </TabWrapper>\n  )\n}\n\n\nTabs.propTypes = {\n  children: PropTypes.any.isRequired,\n}\n\nexport default Tabs\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport moment from 'moment'\nimport {\n  Avatar,\n  GreyText,\n  TopContent,\n  CommentContainer,\n  CommentBody\n} from './Styles'\n\n\nconst Comment = ({ comment }) => {\n\n  return (\n    <CommentContainer>\n      <TopContent justifyContent='flex-start'>\n        <Avatar margin={10} width={20} height={20} src={comment.node.author.avatarUrl} />\n        <span>{comment.node.author.login}</span>\n        <GreyText>commented on {moment(comment.node.createdAt).format('LLL')}</GreyText>\n      </TopContent>\n      <CommentBody>{comment.node.body}</CommentBody>\n    </CommentContainer>\n  )\n}\n\n\nComment.propTypes = {\n  comment: PropTypes.object.isRequired,\n}\n\nexport default Comment\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport moment from 'moment'\nimport Comment from './Comment'\nimport {\n  GreyText,\n  InputContainer,\n  TopContent,\n  CardWrapper,\n  Tag,\n  IconWrapper\n} from './Styles'\n\n\nconst Card = ({ data, isPressed, cardPressed }) => {\n  const [filteredComments, setFilteredComments] = useState(data.comments.edges)\n\n  const filterSearch = (text) => {\n    let filtered = data.comments.edges.filter(e =>\n      e.node.body.toUpperCase().includes(text.toUpperCase()) ||\n      e.node.author.login.toUpperCase().includes(text.toUpperCase()) ||\n      moment(e.node.createdAt).format('LLL').toUpperCase().includes(text.toUpperCase())\n    )\n    setFilteredComments(filtered)\n  }\n\n  const openGithubLink = () => {\n    if (data.url) {\n      window.open(data.url)\n    }\n  }\n\n  return (\n    <CardWrapper>\n      <TopContent>\n        <h3 style={{ display: 'flex', flexDirection: 'row' }}><IconWrapper noPadding className=\"fas fa-code-branch\" />{data.title}</h3>\n        <IconWrapper onClick={() => cardPressed(isPressed ? '' : data.id)} className=\"fas fa-comment\">\n          <GreyText>{data.comments.totalCount}</GreyText>\n        </IconWrapper>\n      </TopContent>\n      <Tag>#{data.number}</Tag>\n      <Tag>by {data.author.login}</Tag>\n      <Tag>{`created on ${moment(data.createdAt).format('LLL')}`}</Tag>\n      {data.closedAt &&\n        <Tag>{`closed on ${moment(data.closedAt).format('LLL')}`}</Tag>\n      }\n      <Tag>\n        <IconWrapper\n          noPadding\n          onClick={openGithubLink}\n          className=\"fab fa-github\"\n        />\n      </Tag>\n      {!isPressed &&\n        <IconWrapper onClick={() => cardPressed(data.id)} className=\"fas fa-chevron-down\" />\n      }\n      {isPressed &&\n        <>\n          < IconWrapper onClick={() => cardPressed('')} className=\"fas fa-chevron-up\" />\n          <TopContent>\n            <h4>Comments</h4>\n            {data.comments.totalCount > 0 &&\n              < InputContainer\n                onChange={e => { filterSearch(e.target.value) }}\n                type='text'\n                placeholder={'search...'}\n              />}\n          </TopContent>\n          {\n            data.comments.totalCount === 0 ?\n              <em>no comments</em>\n              :\n              (\n                <>\n                  {filteredComments.map(c => {\n                    return (\n                      <Comment key={c.node.id} comment={c} />\n                    )\n                  })}\n                  {data.comments.totalCount > 4 &&\n                    < IconWrapper onClick={() => cardPressed('')} className=\"fas fa-chevron-up\" />\n                  }\n                </>\n              )\n          }\n        </>\n      }\n\n    </CardWrapper>\n  )\n}\n\n\nCard.propTypes = {\n  data: PropTypes.object.isRequired,\n  isPressed: PropTypes.bool.isRequired,\n  cardPressed: PropTypes.func.isRequired,\n}\n\nexport default Card\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { useRepoDataQuery } from './../queries'\nimport Card from './Card'\nimport { GreyText, Center, ErrorMsg } from './Styles'\n\nconst Section = ({ name, repoName, type }) => {\n  const [pressedCard, setPressedCard] = useState('')\n  const queryType = type === 'pullRequests' ? type : 'issues'\n  const { repo } = useRepoDataQuery(name, repoName, type)\n\n  return (\n    !!repo && repo.loading ?\n      <Center style={{ height: '50vh' }}>\n        <GreyText loadingText>loading...</GreyText>\n      </Center>\n      :\n      (repo.error ?\n        <Center style={{ height: '50vh' }}>\n\n          <ErrorMsg>\n            {repo.error.message.includes('401') ?\n              'There seems to be some errors. Please ensure you have right access token'\n              :\n              'Name or repository not found'\n            }\n          </ErrorMsg>\n        </Center>\n        :\n        repo && repo[queryType] ?\n          repo[queryType].edges.map(data => {\n            return <Card\n              cardPressed={(id) => setPressedCard(id)}\n              isPressed={pressedCard === data.node.id}\n              key={data.node.id}\n              data={data.node}\n            />\n          })\n          :\n          <Center style={{ height: '50vh' }}>\n            <em>No {type} found</em>\n          </Center>\n      )\n  )\n}\n\nSection.propTypes = {\n  name: PropTypes.string.isRequired,\n  repoName: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n}\n\n\nexport default Section\n","import React, { useState } from 'react'\nimport Search from './Search'\nimport Tabs from './Tabs'\nimport { ContentWrapper, Center, GreyText } from './Styles'\nimport Section from './Section'\n\nconst Content = () => {\n  const [userInput, setUserInput] = useState({ name: '', repoName: '' })\n\n  const exampleRepos = [\n    'relic-toolkit/relic',\n    'ethereum/go-ethereum',\n    'ahmadawais/corona-cli',\n    'nomiclabs / buidler'\n  ]\n\n  return (\n    <ContentWrapper>\n      <Search onSubmitSearch={x => { setUserInput(x) }} />\n\n      {userInput && !!userInput.name && !!userInput.repoName ?\n        <Tabs>\n          <div label=\"Pull requests\">\n            <Section\n              name={userInput.name}\n              repoName={userInput.repoName}\n              type={'pullRequests'}\n            />\n          </div>\n          <div label=\"Open issues\">\n            <Section\n              name={userInput.name}\n              repoName={userInput.repoName}\n              type={'open-issues'}\n            />\n          </div>\n          <div label=\"Closed issues\">\n            <Section\n              name={userInput.name}\n              repoName={userInput.repoName}\n              type={'closed-issues'}\n            />\n          </div>\n        </Tabs>\n        :\n        <Center style={{ height: '50vh' }}>\n          <GreyText loadingText>\n            Some example repositories:<br /><br />\n            {exampleRepos.map((r, i) => <li key={i}>{r}</li>)}\n          </GreyText>\n        </Center>\n      }\n    </ContentWrapper >\n  )\n}\n\nexport default Content\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { LoginWrapper, InputContainer, ButtonSubmit } from './Styles'\n\n\nconst Login = ({ onSubmit }) => {\n  const [token, setToken] = useState('')\n\n  return (\n    <LoginWrapper>\n      <form onSubmit={e => onSubmit(e, token)}>\n        <h1 >Git Repo Viewer</h1>\n        <InputContainer\n          type=\"password\"\n          name=\"token\"\n          value={token}\n          onChange={e => {\n            setToken(e.target.value)\n          }}\n          placeholder=\"Paste your GitHub token\"\n        />\n        <ButtonSubmit css={{ width: '100%', fontFamily: 'monospace' }}>SUBMIT</ButtonSubmit>\n      </form>\n    </LoginWrapper>\n\n  )\n}\n\nLogin.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n}\n\nLogin.defaultProps = {\n  errorMsg: ''\n}\n\nexport default Login\n","import React, { useState } from 'react'\nimport { ApolloClient } from 'apollo-boost'\nimport { ApolloProvider } from 'react-apollo'\nimport { HttpLink } from 'apollo-link-http'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport './App.css'\nimport HeaderBar from './components/HeaderBar'\nimport Content from './components/Content'\nimport Login from './components/Login'\n\nconst accessToken = localStorage.getItem('token')\n\nconst httpLink = new HttpLink({\n  uri: 'https://api.github.com/graphql',\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n  },\n})\n\nconst client = new ApolloClient({\n  link: httpLink,\n  cache: new InMemoryCache(),\n})\n\n\nfunction App() {\n  const [name, setName] = useState('')\n  const [repo, setRepo] = useState('')\n\n  const handleSubmit = (event, token) => {\n    event.preventDefault()\n    localStorage.setItem('token', token)\n    window.location.reload()\n  }\n\n  const logOut = () => {\n    console.log('accesToken => ', accessToken)\n\n    localStorage.clear()\n    window.location.reload()\n  }\n\n  return (\n    <div className='layout'>\n      {accessToken ?\n        <ApolloProvider client={client}>\n          <HeaderBar onChangeName={n => setName(n)} onChangeRepo={r => setRepo(r)} onLogout={logOut} />\n          <Content name={name} repo={repo} />\n        </ApolloProvider>\n        :\n        <Login onSubmit={handleSubmit} />\n      }\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}